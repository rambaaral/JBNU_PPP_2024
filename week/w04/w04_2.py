#main함수 빈 함수일 때는 pass라고 씀
#pass를 넣는 이유는 문법적으로 완성하기 위해서임
#언더바 2개의 이름은 Dunder라고 한다.

#파일 명이 곧 모듈 명이기 떄문에 숫자시작, 띄어쓰기, 특수문자들을 사용할 수 없다.
#import를 사용하면 내가 짜둔 함수를 불러올 수 있다.
#그 전에 모듈이 존재하는 폴더에 __init__.py를 추가하면 된다.
#불러오는 순간 파일 전체가 실행되기 때문에 코드 전체를 def함수로 만들어두는거같다.


#아마도 main함수를 쓰라고 한 이유는 과제가 작동하는 걸 자동화시키기 위해서인듯 하다.
#내가 낸 과제를 모듈로 불러와서 실행하는 듯

#내가 만든 각각의 py파일들이 모듈이다.
#모듈을 폴더형태로 구조화하면 패키지이다.
#여러가지 패키지와 모듈들을 모아두면 라이브러리이다.
#라이브러리와 비슷하지만 좀 더 복잡한 형태로 만들어진게 프레임워크이다.
#프레임워크는 뭔가 따로 지정하는 규칙도 있는듯

#리스트 안에는 모듈을 이용해서 함수를 담아둘 수도 있다.

#return값 연습하기
#함수를 작성할 때 return을 적용하지 않으면 모듈로 불러왔을 떄 오류가 생길 가능성이 높다.
#함수를 실행했을 떄 함수 값이 어느 변수로 들어간다면 리턴값이 있는 것이다?
def minmax(nums):
    a = nums[0]
    b = nums[0]
    for num in nums:
        if a > num:
            a = num
    for num in nums:
        if b < num:
            b = num
    return a, b

def main():
    x = [3, 5, 7, 10, 2]
    mn, mx = minmax(x)
    print(f"가장 작은수는 {mn}이고 가장 큰 수는 {mx}이다.")

if __name__ == "__main__":
    main()
